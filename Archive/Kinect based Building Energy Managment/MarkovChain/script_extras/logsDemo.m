clc
filenames = {[pwd '\data\k-files\k1.txt'],...
             [pwd '\data\k-files\k2.txt'],...
             [pwd '\data\k-files\k3.txt'],...
             [pwd '\data\k-files\k4.txt'],...
             [pwd '\data\k-files\k5.txt'],...
             [pwd '\data\k-files\k6.txt'],...
             [pwd '\data\k-files\k7.txt'],...
             [pwd '\data\k-files\k8.txt']};
 
 outputfilenames = {[pwd '\data\k-files\o1.txt'],...
                    [pwd '\data\k-files\o2.txt'],...
                    [pwd '\data\k-files\o3.txt'],...
                    [pwd '\data\k-files\o4.txt'],...
                    [pwd '\data\k-files\o5.txt'],...
                    [pwd '\data\k-files\o6.txt'],...
                    [pwd '\data\k-files\o7.txt'],...
                    [pwd '\data\k-files\o8.txt']};
                
 tempfile = [pwd '\data\k-files\temp.txt'];
 
 % Since these log files contain their own `filename` as the first line,
 % the parser would fail to parse them properly due to format conflicts.
 % so let us first delete the first lines and save the text to a temp file
 % and process that. In case the code at the log generation end is changed
 % and the first line is not included, then the following code section
 % shouldn't be used
 
 for i = 1:size(filenames,2)
     fid = fopen(filenames{i}, 'r');
     fgetl(fid); % moving filepointer to line 2
     buffer = fread(fid, inf);
     fclose(fid);
     fidtemp = fopen(tempfile, 'w');
     fwrite(fidtemp, buffer); % Save to file.
     fclose(fidtemp);
     dataStruct = ParseLogFiles(tempfile);
     PrintToFileParsedOutput(dataStruct, outputfilenames{i})
     delete(tempfile)
 end